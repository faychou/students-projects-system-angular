{
    "items": [{
        "id": 1,
        "author": [{
            "name": "fay",
            "resume": "projects/resume/index.html"
        }, {
            "name": "chou",
            "resume": "http://www.faychou.com/newblog"
        }],
        "branch": "大前端",
        "class": 1,
        "itemName": "show system",
        "label": "系统",
        "description": "AngularJS是为了克服HTML在构建应用上的不足而设计的。HTML是一门很好的伪静态文本展示设计的声明式语言，但要构建WEB应用的话它就显得乏力了。而AngularJS是一种使用指令系统去实现WEB应用，你只需要对它填充具体的业务逻辑，是一个完整的客户端的解决方案。",
        "url": "projects/todolist.html",
        "excellent": true,
        "exImg": "image/excellent/ex1.jpg",
        "img": "image/all/all1.jpg"
    }, {
        "id": 2,
        "author": [{
            "name": "jay",
            "resume": "projects/resume/index.html"
        }, {
            "name": "chou",
            "resume": "http://www.faychou.com/newblog"
        }],
        "branch": "大前端",
        "class": 1,
        "itemName": "show system2",
        "label": "系统",
        "description": "离线缓存为的是第一次请求后，根据 manifest 文件进行本地缓存，并且在下一次请求后进行展示（若有缓存的话，无需再次进行请求而是直接调用缓存），最根本的感觉是它使得 WEB 从 online 可以延伸到了 offline 领域。",
        "url": "projects/blog/index.html",
        "excellent": true,
        "exImg": "image/excellent/ex2.jpg",
        "img": "image/all/all2.jpg"
    }, {
        "id": 3,
        "author": [{
            "name": "jack",
            "resume": "projects/resume/index.html"
        }, {
            "name": "baur",
            "resume": "http://www.faychou.com/newblog"
        }],
        "branch": "大前端",
        "class": 2,
        "itemName": "show system3",
        "label": "系统",
        "description": "Sass(Syntactically Awesome StyleSheets) 是对 CSS 的扩展，可以编译成传统 CSS，供浏览器使用。使用 Sass 是为了解决在大型项目中传统 CSS 会遇到的重复、可维护性差等问题。",
        "url": "projects/order/index.html",
        "excellent": true,
        "exImg": "image/excellent/ex3.jpg",
        "img": "image/all/all3.jpg"
    }, {
        "id": 4,
        "author": [{
            "name": "fay",
            "resume": "projects/resume/index.html"
        }, {
            "name": "jay",
            "resume": "http://www.faychou.com/newblog"
        }],
        "branch": "大前端",
        "class": 1,
        "itemName": "show system4",
        "label": "系统",
        "description": "垃圾回收器要解决的最基本问题就是，辨别需要回收的内存。一旦辨别完毕，这些内存区域即可在未来的分配中重用，或者是返还给操作系统。一个对象当它不是处于活跃状态的时候它就死了。",
        "url": "projects/search/index.html",
        "excellent": true,
        "exImg": "image/excellent/ex4.jpg",
        "img": "image/all/all4.jpg"
    }]
}